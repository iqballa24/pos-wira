/* eslint-disable @typescript-eslint/no-explicit-any */
import { useMutation, UseMutationOptions } from '@tanstack/react-query';
import { AxiosError } from 'axios';

import { instance } from "@/services/instances";

interface I{{pascalCase fileName}}Request {
  id: string;
  //other request
};

export interface I{{pascalCase fileName}}Args {
  // define any with response data
  mutationOption: UseMutationOptions<any, AxiosError, I{{pascalCase fileName}}Request>;
  request: I{{pascalCase fileName}}Request;
}

export const {{camelCase fileName}} = async ({ id }: I{{pascalCase fileName}}Args['request']) => {
  const response = await instance('{{kebabCase name}}').delete(`/${id}`);
  return response.data;
};

export const use{{pascalCase fileName}} = (mutationOption?: I{{pascalCase fileName}}Args['mutationOption']) => {
  return useMutation({
    mutationFn: ({ id }) => {{camelCase fileName}}({ id }),
    ...(mutationOption || {}),
  });
};

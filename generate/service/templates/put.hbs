import { useMutation, UseMutationOptions } from '@tanstack/react-query';
import { AxiosError } from 'axios';

import { instance } from "@/services/instances";

interface I{{pascalCase fileName}}Variables {
  id: string;
  name: string;
  // other variable or payload
}

interface I{{pascalCase fileName}}Response {
  id: string;
  // other response
}

export interface I{{pascalCase fileName}}Args {
  mutationOption: UseMutationOptions<I{{pascalCase fileName}}Response, AxiosError, I{{pascalCase fileName}}Variables>;
  variables: I{{pascalCase fileName}}Variables;
}

export const {{camelCase fileName}} = async (variables: I{{pascalCase fileName}}Args['variables']) => {
  const { id, ...rest } = variables;
  const response = await instance('{{kebabCase name}}').put<I{{pascalCase fileName}}Response>(`/${id}`, {
    ...rest,
  });
  return response.data;
};

export const use{{pascalCase fileName}} = (mutationOption?: I{{pascalCase fileName}}Args['mutationOption']) => {
  return useMutation({
    mutationFn: (variables) => {{camelCase fileName}}(variables),
    ...(mutationOption || {}),
  });
};
